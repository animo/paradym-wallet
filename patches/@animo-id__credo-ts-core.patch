diff --git a/build/modules/dif-presentation-exchange/DifPresentationExchangeService.js b/build/modules/dif-presentation-exchange/DifPresentationExchangeService.js
index 3a986450bb1f29a9acf1faa674dfdf7751640432..e33192f3c1fc33e1fcea5a0d0215d81ccd2ec85b 100644
--- a/build/modules/dif-presentation-exchange/DifPresentationExchangeService.js
+++ b/build/modules/dif-presentation-exchange/DifPresentationExchangeService.js
@@ -33,8 +33,15 @@ let DifPresentationExchangeService = class DifPresentationExchangeService {
         this.pex = new pex_1.PEX({ hasher: crypto_1.Hasher.hash });
     }
     async getCredentialsForRequest(agentContext, presentationDefinition) {
-        const credentialRecords = await this.queryCredentialForPresentationDefinition(agentContext, presentationDefinition);
-        return (0, utils_2.getCredentialsForRequest)(this.pex, presentationDefinition, credentialRecords);
+        const _pd = {
+            ...presentationDefinition,
+            input_descriptors: presentationDefinition.input_descriptors.map(id => ({
+                ...id,
+                constraints: id.constraints ? { ...id.constraints, limit_disclosure: id.constraints.limit_disclosure ?? 'preferred' } : { limit_disclosure: 'preferred' }
+            }))
+        }
+        const credentialRecords = await this.queryCredentialForPresentationDefinition(agentContext, _pd);
+        return (0, utils_2.getCredentialsForRequest)(this.pex, _pd, credentialRecords);
     }
     /**
      * Selects the credentials to use based on the output from `getCredentialsForRequest`
@@ -91,7 +98,14 @@ let DifPresentationExchangeService = class DifPresentationExchangeService {
     }
     async createPresentation(agentContext, options) {
         var _a;
-        const { presentationDefinition, domain, challenge, openid4vp } = options;
+        const { domain, challenge, openid4vp } = options;
+        const presentationDefinition = {
+            ...options.presentationDefinition,
+            input_descriptors: options.presentationDefinition.input_descriptors.map(id => ({
+                ...id,
+                constraints: id.constraints ? { ...id.constraints, limit_disclosure: id.constraints.limit_disclosure ?? 'preferred' } : { limit_disclosure: 'preferred' }
+            }))
+        }
         const presentationSubmissionLocation = (_a = options.presentationSubmissionLocation) !== null && _a !== void 0 ? _a : models_1.DifPresentationExchangeSubmissionLocation.PRESENTATION;
         const verifiablePresentationResultsWithFormat = [];
         const presentationsToCreate = (0, utils_2.getPresentationsToCreate)(options.credentialsForInputDescriptor);
