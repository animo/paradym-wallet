diff --git a/dist/authorization-response/PresentationExchange.js b/dist/authorization-response/PresentationExchange.js
index 46e80f434179752a8770dc604c54074451c18f8f..82881914d3c45bffe008da89f67d149d1644c23f 100644
--- a/dist/authorization-response/PresentationExchange.js
+++ b/dist/authorization-response/PresentationExchange.js
@@ -104,10 +104,12 @@ class PresentationExchange {
         });
     }
     static assertValidPresentationSubmission(presentationSubmission) {
-        const validationResult = pex_1.PEX.validateSubmission(presentationSubmission);
-        if (validationResult[0].message != 'ok') {
-            throw new Error(`${types_1.SIOPErrors.RESPONSE_OPTS_PRESENTATIONS_SUBMISSION_IS_NOT_VALID}, details ${JSON.stringify(validationResult[0])}`);
-        }
+        // FIXME: enable validation. Currently it fails only in react native
+        // See issue: https://github.com/Sphereon-Opensource/PEX/issues/118
+        // const validationResult = pex_1.PEX.validateSubmission(presentationSubmission);
+        // if (validationResult[0].message != 'ok') {
+        //     throw new Error(`${types_1.SIOPErrors.RESPONSE_OPTS_PRESENTATIONS_SUBMISSION_IS_NOT_VALID}, details ${JSON.stringify(validationResult[0])}`);
+        // }
     }
     /**
      * Finds a valid PresentationDefinition inside the given AuthenticationRequestPayload
